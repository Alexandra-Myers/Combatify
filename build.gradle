plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = "$project.mod_version.$project.sub_version"
group = project.maven_group

base {
	archivesName = "$project.archives_base_name-$project.minecraft_version-Fabric"
}

configurations {
	includeClasspath
}

loom {
	accessWidenerPath = file("src/main/resources/combatify.accesswidener")
}

repositories {
	flatDir {
		dirs 'libs'
	}
	allprojects { repositories { maven { url 'https://jitpack.io' } } }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url 'https://maven.nucleoid.xyz' }
	mavenCentral()
	maven {
		name = "ViaVersion"
		url = "https://repo.viaversion.com"
	}
	maven {
		name = "Lenni0451"
		url = "https://maven.lenni0451.net/everything"
	}
	maven {
		name = "OpenCollab Snapshots"
		url = "https://repo.opencollab.dev/maven-snapshots/"
	}
	maven { url "https://maven.ryanliptak.com/" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "maven.modrinth:sodium:${project.sodium_version}"
	modImplementation "maven.modrinth:atlas-core:${project.atlas_core_version}-${project.minecraft_version}"
	modImplementation "maven.modrinth:defaulted:1.21.5-1.1.6.1-Fabric"
	modImplementation "com.viaversion:viafabricplus:4.1.3"
	modApi "com.terraformersmc:modmenu:14.0.0-rc.2"
	modApi "me.shedaniel.cloth:cloth-config-fabric:18.0.145"
	modImplementation "maven.modrinth:cookeymod:1.7.12+1.21.5"
	modImplementation "eu.pb4:polymer-core:0.12.4+1.21.5"
	modImplementation ("squeek.appleskin:appleskin-fabric:mc1.21.5-3.0.6")
	include implementation("org.mozilla:rhino-all:${project.rhino_version}")

	implementation "com.fasterxml.jackson.core:jackson-core:${project.jackson_version}"
	implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-toml:${project.jackson_version}"
}

configurations.configureEach {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:${project.loader_version}")
	}
}

loom {
	accessWidenerPath = file("src/main/resources/combatify.accesswidener")
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.20.5 (24w14a) upwards uses Java 21.
	it.options.release = 21
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with developement.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
	from {
		configurations.includeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
